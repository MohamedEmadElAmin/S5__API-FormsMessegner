<?php

namespace App\Services\Cache;

use App\Entity\ShippingOrder\OrderStatus;
use App\Services\Cache\Base\CacheBase;
use App\Services\Cache\Base\CacheBaseInterface;
use Symfony\Contracts\Cache\ItemInterface;

class ShippingOrderStatusCache extends CacheBase implements CacheBaseInterface
{
    public function getFromCache(string $key): ?OrderStatus
    {
        //$this->cache->invalidateTags(['ShippingOrderStatus']);
        //since there is no back end for status, no need to invalidate the cache in doctrine event
        $shippingOrderStatus = $this->cache->get('ShippingOrderStatus', function (ItemInterface $item)
        {
            $item->expiresAfter(3600); //seconds
            $item->tag(['ShippingOrderStatus']); //for now we use key as tag
            return $this->em->getRepository(OrderStatus::class)->findAll();
        });

        foreach ($shippingOrderStatus as $currentStatus) {
            if ($currentStatus->getName() == $key){
                //getReference is generated by the cache
                return $this->em->getReference(OrderStatus::class, $currentStatus->getId());
            }
        }
        return NULL;
    }
}